table ip nat {
  chain prerouting {
    type nat hook prerouting priority -100;
    # Port forwarding from WAN to DMZ for HTTP
    iif "ens192" tcp dport 80 dnat to 10.1.20.20;
    # Port forwarding from WAN to DMZ for HTTPS
    iif "ens192" tcp dport 443 dnat to 10.1.20.20;
    # Port forwardings from WAN to DMZ for DNS
    iif "ens192" tcp dport 53 dnat to 10.1.20.20;
    iif "ens192" udp dport 53 dnat to 10.1.20.20;
    # NAT traffic from LAN with target port 80 to squid
    iifname {"ens224", "wg0"} tcp dport 80 redirect to :82;
  }

  chain postrouting {
    type nat hook postrouting priority 100;
    # Masquerade traffic from internal and DMZ out to the internet
    oif "ens192" masquerade
  }
}

table ip filter {
  chain input {
    type filter hook input priority 0;
    policy drop;
    iif lo accept
    # Allow established and related connections
    ct state established,related accept
    # Accept all incoming traffic on internal and DMZ interfaces
    iifname {"ens224", "ens256"} accept
    iifname "ens192" udp dport 1500 accept
    icmp type { echo-request, echo-reply } limit rate 4/second accept
  }

  chain forward {
    type filter hook forward priority 0;
    policy drop;
    # Allow forwarding of established and related connections
    ct state established,related accept
    # Allow all traffic from LAN, DMZ to the internet
    iifname {"ens224", "ens256"} oif "ens192" accept
    # Allow all traffic from LAN and VPN  to DMZ
    iifname {"ens224","wg0"} oif "ens256" accept
    # Allow access to internal from vpn
    iifname "wg0" oif "ens224" accept
    # Allow LDAP from mail to intsrv0
    ip protocol tcp ip saddr 10.1.20.10 ip daddr 10.1.10.10 tcp dport 389 accept;
    # Allow HTTP + HTTPS from WAN to prx-vrrp
    ip protocol tcp ip daddr 10.1.20.20 tcp dport {80, 443} accept;
    # Allow DNS from WAN to prx-vrrp
    ip protocol tcp ip daddr 10.1.20.20 tcp dport 53 accept;
    ip protocol udp ip daddr 10.1.20.20 udp dport 53 accept;

  }

  chain output {
    type filter hook output priority 0;
    policy accept;
  }
}
table ip6 nat {
  chain prerouting {
    type nat hook prerouting priority -100;
    iifname {"ens224", "wg0"} tcp dport 80 redirect to :82;
    }
  }
table ip6 filter {
  chain input {
    type filter hook input priority 0;
    policy drop;
    iif lo accept
    # Allow established and related connections
    ct state established,related accept
    # Accept all incoming traffic on internal and DMZ interfaces
    iifname {"ens224", "ens256", "wg0"} accept
    # Allow wg
    ip6 daddr { 2001:db8:1111::1 } udp dport { 1500 } accept
    ip6 daddr { 2001:db8:1001:10::1 } tcp dport 82 accept
  }

  chain forward {
    type filter hook forward priority 0;
    policy drop;
    # Allow forwarding of established and related connections
    ct state established,related accept
    # Allow all traffic from LAN and DMZ to the internet
    iifname {"ens224", "ens256", "wg0"} oif "ens192" accept
    # Allow all traffic from LAN to DMZ
    iifname {"ens224","wg0"} oif "ens256" accept
    # Allow IPv6 access to the webservers
    ip6 daddr { 2001:db8:1001:20::20 } tcp dport { 80, 443 } accept
    # Allow IPv6 access DNS
    ip6 daddr { 2001:db8:1001:20::20 } tcp dport 53 accept
    ip6 daddr { 2001:db8:1001:20::20 } udp dport 53 accept

  }

  chain output {
    type filter hook output priority 0;
    policy accept;
  }
}